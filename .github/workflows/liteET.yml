name: 小et

on:
  workflow_dispatch:
    inputs:
      feature:
        description: '按需添加想要的模块，多个模块以,分隔'
        required: false
        default: ''

env:
  CARGO_TERM_COLOR: always
  TZ: Asia/Shanghai
  feature: "${{ github.event.inputs.feature }}"
jobs:
 build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: EasyTier/EasyTier
      - name: 安装最新 Protoc
        uses: arduino/setup-protoc@v3
      - name: 设置编译环境
        run: |
          sudo timedatectl set-timezone "Asia/Shanghai"
          sudo apt-get update && sudo apt-get install -qq musl-tools libappindicator3-dev llvm clang
          rustup set auto-self-update disable
          rustup install 1.84
          rustup default 1.84
          MUSL_URI="https://archive.openwrt.org/releases/23.05.4/targets/mediatek/filogic/openwrt-toolchain-23.05.4-mediatek-filogic_gcc-12.3.0_musl.Linux-x86_64.tar.xz"
          mkdir -p /opt/musl_gcc
          wget -q -c $MUSL_URI -P /opt/musl_gcc/
          tar -xJf /opt/musl_gcc/*.tar.xz -C /opt/musl_gcc --strip-components=1
          sudo ln -s /opt/musl_gcc/toolchain-*/bin/*gcc /usr/bin/
          sudo ln -s /opt/musl_gcc/toolchain-*/include/ /usr/include/musl-cross
          echo "PATH=$PATH:$(echo /opt/musl_gcc/toolchain-*/bin)" >> $GITHUB_ENV
          echo "STAGING_DIR=$(echo /opt/musl_gcc/toolchain-*)" >> $GITHUB_ENV
          rustup target add aarch64-unknown-linux-musl
          cat >>~/.cargo/config <<EOF
          [target.aarch64-unknown-linux-musl]
          linker = "aarch64-openwrt-linux-musl-gcc"
          rustflags = ["-C", "opt-level=z", "-C", "strip=symbols"]
          EOF
      - name: 开始编译
        run: |
          [[ -n $feature ]] && echo "当前添加的模块有 ${feature}" && FEATURES="--features ${feature}"
          export KCP_SYS_EXTRA_HEADER_PATH=/usr/include/musl-cross
          rm -rf .cargo
          cargo build -p easytier -r --target aarch64-unknown-linux-musl --no-default-features $FEATURES
          mkdir -p /opt/bin
          mv ./target/aarch64-unknown-linux-musl/release/easytier-core /opt/bin/easytier-core
      - name: 安装UPX
        uses: crazy-max/ghaction-upx@v3
        with:
          version: latest
          install-only: true
      - name: 打包压缩
        run: |
          cd /opt/bin
          ls -alh easytier-core
          file easytier-core
          ldd easytier-core || true
          aarch64-openwrt-linux-strip easytier-core
          upx --lzma --best easytier-core
          ls -alh easytier-core
      - name: 上传
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ET
          path: /opt/bin/*
