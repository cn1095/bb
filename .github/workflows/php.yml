name: php
on:
  workflow_dispatch:
env:
  TZ: Asia/Shanghai
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
       repository: crazywhalecc/static-php-cli
    - name: 下载gcc
      uses: lmq8267/dl-musl@main
      with:
        target: mipsel-linux-muslsf
        static: true
        gccpath: /tmp
    - name: sed
      run: |
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/unix/library/xz.php
         sed -i 's/configure/configure --host=mipsel-linux-muslsf/g' src/SPC/builder/unix/library/libcares.php
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/unix/library/freetype.php
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/unix/library/gettext.php
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/unix/library/gmp.php
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/unix/library/imagemagick.php
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/unix/library/ldap.php
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/unix/library/libiconv.php
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/unix/library/librdkafka.php
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/unix/library/libsodium.php
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/unix/library/libtiff.php
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/unix/library/libxslt.php
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/unix/library/ncurses.php
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/unix/library/nghttp2.php
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/unix/library/onig.php
         sed -i 's/configure/configure --host=mipsel-linux-muslsf/' src/SPC/builder/unix/library/postgresql.php
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/unix/library/qdbm.php
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/unix/library/readline.php
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/unix/library/sqlite.php
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/unix/library/unixodbc.php
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/linux/library/libpng.php

         sed -i 's/configure/configure --host=mipsel-linux-muslsf/' src/SPC/builder/unix/library/zlib.php
         sed -i 's/--prefix=/--build=x86_64 --host=mipsel-linux-muslsf --prefix=/' config/env.ini
         sed -i '/\[global\]/i SPC_LINUX_DEFAULT_CC=mipsel-linux-muslsf-gcc' config/env.ini
         sed -i '/\[global\]/i SPC_LINUX_DEFAULT_CXX=mipsel-linux-muslsf-g++' config/env.ini
         sed -i '/\[global\]/i SPC_LINUX_DEFAULT_AR=mipsel-linux-muslsf-ar' config/env.ini
         sed -i '/\[global\]/i SPC_PHP_DEFAULT_OPTIMIZE_CFLAGS="${CFLAGS}"' config/env.ini
         sed -i '/\[global\]/i SPC_PHP_DEFAULT_LD_LIBRARY_PATH_CMD="${LD_LIBRARY_PATH}"' config/env.ini
         sed -i 's/CC=\${SPC_LINUX_DEFAULT_CC}/CC=mipsel-linux-muslsf-gcc/' config/env.ini
         sed -i 's/CXX=\${SPC_LINUX_DEFAULT_CXX}/CC=mipsel-linux-muslsf-g++/' config/env.ini
         sed -i 's/AR=\${SPC_LINUX_DEFAULT_AR}/CC=mipsel-linux-muslsf-ar/' config/env.ini
         sed -i 's/LD=ld.gold/LD=mipsel-linux-muslsf-ld/' config/env.ini
         
         sed -i 's/{$arch}-linux-musl-gcc/mipsel-linux-muslsf-gcc/' src/SPC/util/GlobalEnvManager.php
         sed -i 's/{$arch}-linux-musl-g++/mipsel-linux-muslsf-g++/' src/SPC/util/GlobalEnvManager.php
         sed -i 's/{$arch}-linux-musl-ar/mipsel-linux-muslsf-ar/' src/SPC/util/GlobalEnvManager.php
         sed -i '/-D_FILE_OFFSET_BITS=64/d' src/SPC/util/GlobalEnvManager.php
         sed -i 's|/usr/local/musl/{$CFLAGS}-linux-musl/lib| |' src/SPC/util/GlobalEnvManager.php
         echo "############################################################################"
         cat src/SPC/util/GlobalEnvManager.php
         echo "############################################################################"
         sed -i 's|linux-{$this->builder->getOption(\'arch\')}{$clang_postfix}|linux-mips32|' src/SPC/builder/linux/library/openssl.php
         echo "############################################################################"
         cat src/SPC/builder/linux/library/openssl.php
         echo "############################################################################"
         echo "<?php

         declare(strict_types=1);

         namespace SPC\builder\linux\library;

         use SPC\store\FileSystem;

         class icu extends LinuxLibraryBase
         {
          use \SPC\builder\unix\library\icu;

          public const NAME = 'icu';

          protected function build(): void
          {
          // 本机编译环境
          \$native_cc = 'CC=gcc';
          \$native_cxx = 'CXX=g++';
          \$native_ld = 'LD=ld.gold';
          \$native_ar = 'AR=ar';
          \$native_cflags = 'CFLAGS=\"-O2 -fPIC\"';
          \$native_cxxflags = 'CXXFLAGS=\"-O2 -fPIC -std=c++17\"';
          \$native_ldflags = 'LDFLAGS=\"-static\"';
        
          // 进入 ICU 源码目录并进行本机编译
          shell()->cd(\$this->source_dir . '/source')
            ->exec(
                \"\${native_cc} \${native_cxx} \${native_ld} \${native_ar} \" .
                \"\${native_cflags} \${native_cxxflags} \${native_ldflags} \" .
                './runConfigureICU Linux ' .
                '--prefix=' . BUILD_ROOT_PATH . '/native-icu ' .
                '--enable-static ' .
                '--disable-shared ' .
                '--with-data-packaging=static ' .
                '--enable-release=yes ' .
                '--enable-extras=no ' .
                '--enable-icuio=yes ' .
                '--enable-dyload=no ' .
                '--enable-tools=yes ' .
                '--enable-tests=no ' .
                '--enable-samples=no'
            )
            ->exec('make clean')
            ->exec(\"make -j\${this->builder->concurrency}\")
            ->exec('make install')
            ->exec('ls')
            ->exec('cp -r bin ' . BUILD_ROOT_PATH . '/native-icu')
            ->exec('cp -r config ' . BUILD_ROOT_PATH . '/native-icu');
        
          // 交叉编译环境
          \$cppflags = 'CPPFLAGS=\"-DU_CHARSET_IS_UTF8=1  -DU_USING_ICU_NAMESPACE=1 -DU_STATIC_IMPLEMENTATION=1\"';
          \$cxxflags = 'CXXFLAGS=\"-std=c++17\"';
          \$ldflags = 'LDFLAGS=\"-static\"';

          shell()->cd(\$this->source_dir . '/source')
            ->exec(
                \"\${cppflags} \${cxxflags} \${ldflags} \" .
                './runConfigureICU Linux ' .
                '--host=mipsel-linux-muslsf ' .
                '--enable-static ' .
                '--disable-shared ' .
                '--with-data-packaging=static ' .
                '--enable-release=yes ' .
                '--enable-extras=no ' .
                '--enable-icuio=yes ' .
                '--enable-dyload=no ' .
                '--enable-tools=yes ' .
                '--enable-tests=no ' .
                '--enable-samples=no ' .
                '--prefix=' . BUILD_ROOT_PATH . ' ' .
                '--with-cross-build=' . BUILD_ROOT_PATH . '/native-icu'
            )
            ->exec('make clean')
            ->exec(\"make -j\${this->builder->concurrency}\")
            ->exec('make install');

          \$this->patchPkgconfPrefix(['icu-i18n.pc', 'icu-io.pc', 'icu-uc.pc'], PKGCONF_PATCH_PREFIX);
          FileSystem::removeDir(BUILD_LIB_PATH . '/icu');
          }
         }" > src/SPC/builder/linux/library/icu.php

         echo "############################################################################"
         cat src/SPC/builder/linux/library/icu.php
         echo "############################################################################"
         
         echo "<?php

         declare(strict_types=1);

         namespace SPC\builder\unix\library;

         trait pkgconfig
         {
          protected function build(): void
          {
            \$cflags = PHP_OS_FAMILY !== 'Linux' ? \"{\$this->builder->arch_c_flags} -Wimplicit-function-declaration -Wno-int-conversion\" : '';
            \$ldflags = PHP_OS_FAMILY !== 'Linux' ? '' : '--static';

            shell()->cd(\$this->source_dir)
            ->setEnv([
                'CC' => '/usr/bin/gcc',  // 强制使用系统 GCC
                'CXX' => '/usr/bin/g++', // 强制使用系统 G++
                'LD' => '/usr/bin/ld.gold',   // 强制使用系统 LD
                'AR' => '/usr/bin/ar',   // 强制使用系统 AR
                'CFLAGS' => '-static',
                'LDFLAGS' => '-static',
                'LIBS' => \$this->getLibExtraLibs()
            ])
            ->execWithEnv(
                './configure ' .
                '--disable-shared ' .
                '--enable-static ' .
                '--with-internal-glib ' .
                '--disable-host-tool ' .
                '--with-pic ' .
                '--prefix=' . BUILD_ROOT_PATH . ' ' .
                '--without-sysroot ' .
                '--without-system-include-path ' .
                '--without-system-library-path ' .
                '--without-pc-path'
            )
            ->exec('make clean')
            ->execWithEnv(\"make -j{\$this->builder->concurrency}\")
            ->execWithEnv('make install-exec');
            }
            }" > src/SPC/builder/unix/library/pkgconfig.php
         echo "############################################################################"
         cat src/SPC/builder/unix/library/pkgconfig.php
         echo "############################################################################"


    - name: spc
      run: |
         export SPC_LINUX_DEFAULT_CC=mipsel-linux-muslsf-gcc
         export SPC_LINUX_DEFAULT_CXX=mipsel-linux-muslsf-g++
         export SPC_LINUX_DEFAULT_AR=mipsel-linux-muslsf-ar
         export SPC_PHP_DEFAULT_OPTIMIZE_CFLAGS="${CFLAGS}"
         export SPC_PHP_DEFAULT_LD_LIBRARY_PATH_CMD="${LD_LIBRARY_PATH}"
         chmod +x bin/setup-runtime && bin/setup-runtime && bin/composer install && chmod +x bin/spc && bin/spc --version

    - name: download
      run: |
         sudo apt install qemu-user qemu-user-static binfmt-support libelf-dev 
         sudo update-binfmts --enable qemu-mipsel
         sudo cp -rf $STRIP $(which strip)
         export QEMU_BINARY=qemu-mipsel
         bin/spc download --with-php=8.2 --for-extensions "apcu,bcmath,calendar,ctype,curl,dba,dom,event,exif,fileinfo,openssl,filter,gd,iconv,intl,mbregex,mbstring,mysqli,mysqlnd,opcache,pcntl,pdo,pdo_mysql,pdo_pgsql,pdo_sqlite,pgsql,phar,posix,readline,redis,session,simdjson,simplexml,sockets,sodium,sqlite3,tokenizer,uuid,uv,xml,xmlreader,xmlwriter,xsl,yaml,zip,zlib"
         bin/spc install-pkg upx
    - name: build
      run: |
         #curl -fsSL -o spc https://dl.static-php.dev/static-php-cli/spc-bin/nightly/spc-linux-x86_64
         #chmod +x ./spc
         #./spc --version
         #sudo apt update
         rm -rf /tmp/mipsel-linux-muslsf-cross/mipsel-linux-muslsf/lib/*.la
         export SPC_LINUX_DEFAULT_CC=mipsel-linux-muslsf-gcc
         export SPC_LINUX_DEFAULT_CXX=mipsel-linux-muslsf-g++
         export SPC_LINUX_DEFAULT_AR=mipsel-linux-muslsf-ar
         export SPC_PHP_DEFAULT_OPTIMIZE_CFLAGS="${CFLAGS}"
         export SPC_PHP_DEFAULT_LD_LIBRARY_PATH_CMD="${LD_LIBRARY_PATH}"
         
         bin/spc build --build-cli --build-fpm "apcu,bcmath,calendar,ctype,curl,dba,dom,event,exif,fileinfo,filter,gd,iconv,intl,openssl,mbregex,mbstring,mysqli,mysqlnd,opcache,pcntl,pdo,pdo_mysql,pdo_pgsql,pdo_sqlite,pgsql,phar,posix,readline,redis,session,simdjson,simplexml,sockets,sodium,sqlite3,tokenizer,uuid,uv,xml,xmlreader,xmlwriter,xsl,yaml,zip,zlib" --with-libs="libjpeg" --with-upx-pack --debug
         ls buildroot/bin
         file buildroot/bin/php || true
   
    - uses: actions/upload-artifact@v4
      with:
        name: php
        path: buildroot
