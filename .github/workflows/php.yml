name: php-mipsel
on:
  workflow_dispatch:
    inputs:
      branch:
        description: '编译crazywhalecc/static-php-cli源码的分支或版本号，默认主分支main'
        required: true
        default: 'main'
      tag:
        description: '请选择php版本'
        required: true
        type: choice
        default: "8.2"
        options:
          - "8.4"
          - "8.3"
          - "8.2"
          - "8.1"
          - "8.0"
          - "7.4"
      option:
        description: '编译php集成的模块（https://static-php.dev/zh/guide/cli-generator.html）'
        required: true
        default: "apcu,bcmath,calendar,ctype,curl,dba,dom,event,exif,fileinfo,filter,gd,iconv,intl,openssl,mbregex,mbstring,mysqli,mysqlnd,opcache,pcntl,pdo,pdo_mysql,pdo_pgsql,pdo_sqlite,pgsql,phar,posix,readline,redis,session,ssh2,simdjson,simplexml,sockets,sodium,sqlite3,tokenizer,uuid,uv,xml,xmlreader,xmlwriter,xsl,yaml,zip,zlib"
env:
  TZ: Asia/Shanghai
  tag: "${{ github.event.inputs.tag }}"
  option: "${{ github.event.inputs.option }}"
permissions:
  contents: write
jobs:
  php:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
       repository: crazywhalecc/static-php-cli
       ref: ${{ github.event.inputs.branch }}
    - name: musl-gcc
      uses: lmq8267/dl-musl@main
      with:
        target: mipsel-linux-muslsf
        static: true
        gccpath: /tmp
    - name: sed
      run: |
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/unix/library/xz.php
         sed -i 's/configure/configure --host=mipsel-linux-muslsf/g' src/SPC/builder/unix/library/libcares.php
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/unix/library/freetype.php
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/unix/library/gettext.php
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/unix/library/gmp.php
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/unix/library/imagemagick.php
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/unix/library/ldap.php
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/unix/library/libiconv.php
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/unix/library/librdkafka.php
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/unix/library/libsodium.php
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/unix/library/libtiff.php
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/unix/library/libxslt.php
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/unix/library/ncurses.php
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/unix/library/nghttp2.php
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/unix/library/onig.php
         sed -i 's/configure/configure --host=mipsel-linux-muslsf/' src/SPC/builder/unix/library/postgresql.php
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/unix/library/qdbm.php
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/unix/library/readline.php
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/unix/library/sqlite.php
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/unix/library/unixodbc.php
         sed -i 's/--enable-static/--host=mipsel-linux-muslsf --enable-static/' src/SPC/builder/linux/library/libpng.php

         sed -i 's/--prefix=/--build=x86_64 --host=mipsel-linux-muslsf --prefix=/' config/env.ini
         sed -i '/\[global\]/i SPC_LINUX_DEFAULT_CC=mipsel-linux-muslsf-gcc' config/env.ini
         sed -i '/\[global\]/i SPC_LINUX_DEFAULT_CXX=mipsel-linux-muslsf-g++' config/env.ini
         sed -i '/\[global\]/i SPC_LINUX_DEFAULT_AR=mipsel-linux-muslsf-ar' config/env.ini
         sed -i '/\[global\]/i SPC_PHP_DEFAULT_OPTIMIZE_CFLAGS="${CFLAGS}"' config/env.ini
         sed -i '/\[global\]/i SPC_PHP_DEFAULT_LD_LIBRARY_PATH_CMD="${LD_LIBRARY_PATH}"' config/env.ini
         sed -i 's/CC=\${SPC_LINUX_DEFAULT_CC}/CC=mipsel-linux-muslsf-gcc/' config/env.ini
         sed -i 's/CXX=\${SPC_LINUX_DEFAULT_CXX}/CC=mipsel-linux-muslsf-g++/' config/env.ini
         sed -i 's/AR=\${SPC_LINUX_DEFAULT_AR}/CC=mipsel-linux-muslsf-ar/' config/env.ini
         sed -i 's/LD=ld.gold/LD=mipsel-linux-muslsf-ld/' config/env.ini
         
         sed -i 's/{$arch}-linux-musl-gcc/mipsel-linux-muslsf-gcc/' src/SPC/util/GlobalEnvManager.php
         sed -i 's/{$arch}-linux-musl-g++/mipsel-linux-muslsf-g++/' src/SPC/util/GlobalEnvManager.php
         sed -i 's/{$arch}-linux-musl-ar/mipsel-linux-muslsf-ar/' src/SPC/util/GlobalEnvManager.php
         sed -i '/-D_FILE_OFFSET_BITS=64/d' src/SPC/util/GlobalEnvManager.php
         sed -i 's|/usr/local/musl/{$CFLAGS}-linux-musl/lib| |' src/SPC/util/GlobalEnvManager.php
         
         sed -i "s|linux-{\$this->builder->getOption('arch')}{\$clang_postfix}|linux-mips32|" src/SPC/builder/linux/library/openssl.php
         
         echo "<?php" > src/SPC/builder/linux/library/icu.php
         echo "declare(strict_types=1);" >> src/SPC/builder/linux/library/icu.php
         echo "namespace SPC\builder\linux\library;" >> src/SPC/builder/linux/library/icu.php
         echo "use SPC\store\FileSystem;" >> src/SPC/builder/linux/library/icu.php
         echo "class icu extends LinuxLibraryBase" >> src/SPC/builder/linux/library/icu.php
         echo "{" >> src/SPC/builder/linux/library/icu.php
         echo "use \SPC\builder\unix\library\icu;" >> src/SPC/builder/linux/library/icu.php
         echo "public const NAME = 'icu';" >> src/SPC/builder/linux/library/icu.php
         echo "protected function build(): void" >> src/SPC/builder/linux/library/icu.php
         echo "{" >> src/SPC/builder/linux/library/icu.php
         echo "\$native_cc = 'CC=gcc';" >> src/SPC/builder/linux/library/icu.php
         echo "\$native_cxx = 'CXX=g++';" >> src/SPC/builder/linux/library/icu.php
         echo "\$native_ld = 'LD=ld.gold';" >> src/SPC/builder/linux/library/icu.php
         echo "\$native_ar = 'AR=ar';" >> src/SPC/builder/linux/library/icu.php
         echo "\$native_cflags = 'CFLAGS=\"-O2 -fPIC\"';" >> src/SPC/builder/linux/library/icu.php
         echo "\$native_cxxflags = 'CXXFLAGS=\"-O2 -fPIC -std=c++17\"';" >> src/SPC/builder/linux/library/icu.php
         echo "\$native_ldflags = 'LDFLAGS=\"-static\"';" >> src/SPC/builder/linux/library/icu.php
         echo "shell()->cd(\$this->source_dir . '/source')" >> src/SPC/builder/linux/library/icu.php
         echo "->exec(" >> src/SPC/builder/linux/library/icu.php
         echo "\"{\$native_cc} {\$native_cxx} {\$native_ld} {\$native_ar} " ." >> src/SPC/builder/linux/library/icu.php
         echo "\"{\$native_cflags} {\$native_cxxflags} {\$native_ldflags} " ." >> src/SPC/builder/linux/library/icu.php
         echo "'./runConfigureICU Linux ' ." >> src/SPC/builder/linux/library/icu.php
         echo "'--prefix=' . BUILD_ROOT_PATH . '/native-icu ' ." >> src/SPC/builder/linux/library/icu.php
         echo "'--enable-static ' ." >> src/SPC/builder/linux/library/icu.php
         echo "'--disable-shared ' ." >> src/SPC/builder/linux/library/icu.php
         echo "'--with-data-packaging=static ' ." >> src/SPC/builder/linux/library/icu.php
         echo "'--enable-release=yes ' ." >> src/SPC/builder/linux/library/icu.php
         echo "'--enable-extras=no ' ." >> src/SPC/builder/linux/library/icu.php
         echo "'--enable-icuio=yes ' ." >> src/SPC/builder/linux/library/icu.php
         echo "'--enable-dyload=no ' ." >> src/SPC/builder/linux/library/icu.php
         echo "'--enable-tools=yes ' ." >> src/SPC/builder/linux/library/icu.php
         echo "'--enable-tests=no ' ." >> src/SPC/builder/linux/library/icu.php
         echo "'--enable-samples=no'" >> src/SPC/builder/linux/library/icu.php
         echo ")" >> src/SPC/builder/linux/library/icu.php
         echo "->exec('make clean')" >> src/SPC/builder/linux/library/icu.php
         echo "->exec(\"make -j{\$this->builder->concurrency}\")" >> src/SPC/builder/linux/library/icu.php
         echo "->exec('make install')" >> src/SPC/builder/linux/library/icu.php
         echo "->exec('ls')" >> src/SPC/builder/linux/library/icu.php
         echo "->exec('cp -r bin ' . BUILD_ROOT_PATH . '/native-icu')" >> src/SPC/builder/linux/library/icu.php
         echo "->exec('cp -r config ' . BUILD_ROOT_PATH . '/native-icu');" >> src/SPC/builder/linux/library/icu.php
         echo "\$cppflags = 'CPPFLAGS=\"-DU_CHARSET_IS_UTF8=1  -DU_USING_ICU_NAMESPACE=1 -DU_STATIC_IMPLEMENTATION=1\"';" >> src/SPC/builder/linux/library/icu.php
         echo "\$cxxflags = 'CXXFLAGS=\"-std=c++17\"';" >> src/SPC/builder/linux/library/icu.php
         echo "\$ldflags = 'LDFLAGS=\"-static\"';" >> src/SPC/builder/linux/library/icu.php
         echo "shell()->cd(\$this->source_dir . '/source')" >> src/SPC/builder/linux/library/icu.php
         echo "->exec(" >> src/SPC/builder/linux/library/icu.php
         echo "\"{\$cppflags} {\$cxxflags} {\$ldflags} \" ." >> src/SPC/builder/linux/library/icu.php
         echo "'./runConfigureICU Linux ' ." >> src/SPC/builder/linux/library/icu.php
         echo "'--host=mipsel-linux-muslsf ' ." >> src/SPC/builder/linux/library/icu.php
         echo "'--enable-static ' ." >> src/SPC/builder/linux/library/icu.php
         echo "'--disable-shared ' ." >> src/SPC/builder/linux/library/icu.php
         echo "'--with-data-packaging=static ' ." >> src/SPC/builder/linux/library/icu.php
         echo "'--enable-release=yes ' ." >> src/SPC/builder/linux/library/icu.php
         echo "'--enable-extras=no ' ." >> src/SPC/builder/linux/library/icu.php
         echo "'--enable-icuio=yes ' ." >> src/SPC/builder/linux/library/icu.php
         echo "'--enable-dyload=no ' ." >> src/SPC/builder/linux/library/icu.php
         echo "'--enable-tools=yes ' ." >> src/SPC/builder/linux/library/icu.php
         echo "'--enable-tests=no ' ." >> src/SPC/builder/linux/library/icu.php
         echo "'--enable-samples=no ' ." >> src/SPC/builder/linux/library/icu.php
         echo "'--prefix=' . BUILD_ROOT_PATH . ' ' ." >> src/SPC/builder/linux/library/icu.php
         echo "'--with-cross-build=' . BUILD_ROOT_PATH . '/native-icu'" >> src/SPC/builder/linux/library/icu.php
         echo ")" >> src/SPC/builder/linux/library/icu.php
         echo "->exec('make clean')" >> src/SPC/builder/linux/library/icu.php
         echo "->exec(\"make -j{\$this->builder->concurrency}\")" >> src/SPC/builder/linux/library/icu.php
         echo "->exec('make install');" >> src/SPC/builder/linux/library/icu.php
         echo "\$this->patchPkgconfPrefix(['icu-i18n.pc', 'icu-io.pc', 'icu-uc.pc'], PKGCONF_PATCH_PREFIX);" >> src/SPC/builder/linux/library/icu.php
         echo "FileSystem::removeDir(BUILD_LIB_PATH . '/icu');" >> src/SPC/builder/linux/library/icu.php
         echo "}" >> src/SPC/builder/linux/library/icu.php
         echo "}" >> src/SPC/builder/linux/library/icu.php
         cat src/SPC/builder/linux/library/icu.php
  
         echo "<?php" > src/SPC/builder/unix/library/pkgconfig.php
         echo "declare(strict_types=1);" >> src/SPC/builder/unix/library/pkgconfig.php
         echo "namespace SPC\builder\unix\library;" >> src/SPC/builder/unix/library/pkgconfig.php
         echo "trait pkgconfig" >> src/SPC/builder/unix/library/pkgconfig.php
         echo "{" >> src/SPC/builder/unix/library/pkgconfig.php
         echo "protected function build(): void" >> src/SPC/builder/unix/library/pkgconfig.php
         echo "{" >> src/SPC/builder/unix/library/pkgconfig.php
         echo "\$cflags = PHP_OS_FAMILY !== 'Linux' ? \"{\$this->builder->arch_c_flags} -Wimplicit-function-declaration -Wno-int-conversion\" : '';" >> src/SPC/builder/unix/library/pkgconfig.php
         echo "\$ldflags = PHP_OS_FAMILY !== 'Linux' ? '' : '--static';" >> src/SPC/builder/unix/library/pkgconfig.php
         echo "shell()->cd($this->source_dir)" >> src/SPC/builder/unix/library/pkgconfig.php
         echo "->setEnv([" >> src/SPC/builder/unix/library/pkgconfig.php
         echo "'CC' => '/usr/bin/gcc'," >> src/SPC/builder/unix/library/pkgconfig.php
         echo "'CXX' => '/usr/bin/g++'," >> src/SPC/builder/unix/library/pkgconfig.php
         echo "'LD' => '/usr/bin/ld.gold'," >> src/SPC/builder/unix/library/pkgconfig.php
         echo "'AR' => '/usr/bin/ar', " >> src/SPC/builder/unix/library/pkgconfig.php
         echo "'CFLAGS' => '-static'," >> src/SPC/builder/unix/library/pkgconfig.php
         echo "'LDFLAGS' => '-static'," >> src/SPC/builder/unix/library/pkgconfig.php
         echo "'LIBS' => $this->getLibExtraLibs()" >> src/SPC/builder/unix/library/pkgconfig.php
         echo "])" >> src/SPC/builder/unix/library/pkgconfig.php
         echo "->execWithEnv(" >> src/SPC/builder/unix/library/pkgconfig.php
         echo "'./configure ' ." >> src/SPC/builder/unix/library/pkgconfig.php
         echo "'--disable-shared ' ." >> src/SPC/builder/unix/library/pkgconfig.php
         echo "'--enable-static ' ." >> src/SPC/builder/unix/library/pkgconfig.php
         echo "'--with-internal-glib ' ." >> src/SPC/builder/unix/library/pkgconfig.php
         echo "'--disable-host-tool ' ." >> src/SPC/builder/unix/library/pkgconfig.php
         echo "'--with-pic ' ." >> src/SPC/builder/unix/library/pkgconfig.php
         echo "'--prefix=' . BUILD_ROOT_PATH . ' ' ." >> src/SPC/builder/unix/library/pkgconfig.php
         echo "'--without-sysroot ' ." >> src/SPC/builder/unix/library/pkgconfig.php
         echo "'--without-system-include-path ' ." >> src/SPC/builder/unix/library/pkgconfig.php
         echo "'--without-system-library-path ' ." >> src/SPC/builder/unix/library/pkgconfig.php
         echo "'--without-pc-path'" >> src/SPC/builder/unix/library/pkgconfig.php
         echo ")" >> src/SPC/builder/unix/library/pkgconfig.php
         echo "->exec('make clean')" >> src/SPC/builder/unix/library/pkgconfig.php
         echo "->execWithEnv(\"make -j{\$this->builder->concurrency}\")" >> src/SPC/builder/unix/library/pkgconfig.php
         echo "->execWithEnv('make install-exec');" >> src/SPC/builder/unix/library/pkgconfig.php
         echo "}" >> src/SPC/builder/unix/library/pkgconfig.php
         echo "}" >> src/SPC/builder/unix/library/pkgconfig.php
         cat src/SPC/builder/unix/library/pkgconfig.php

    - name: spc
      run: |
         export SPC_LINUX_DEFAULT_CC=mipsel-linux-muslsf-gcc
         export SPC_LINUX_DEFAULT_CXX=mipsel-linux-muslsf-g++
         export SPC_LINUX_DEFAULT_AR=mipsel-linux-muslsf-ar
         export SPC_PHP_DEFAULT_OPTIMIZE_CFLAGS="${CFLAGS}"
         export SPC_PHP_DEFAULT_LD_LIBRARY_PATH_CMD="${LD_LIBRARY_PATH}"
         chmod +x bin/setup-runtime 
         bin/setup-runtime 
         bin/composer install 
         chmod +x bin/spc
         bin/spc --version

    - name: download
      run: |
         sudo apt install qemu-user qemu-user-static binfmt-support
         sudo update-binfmts --enable qemu-mipsel
         sudo cp -rf $STRIP $(which strip)
         export QEMU_BINARY=qemu-mipsel

         echo -e "开始下载模块... \n编译的PHP版本：${{ env.tag }} \n集成的模块：${{ env.option }} \n可能因网络原因下载失败，若失败请重新运行即可"
         bin/spc download --with-php=${{ env.tag }} --for-extensions "${{ env.option }}"
         
    - name: UPX
      uses: crazy-max/ghaction-upx@v3
      with:
        version: latest
        install-only: true
        
    - name: build
      run: |
         rm -rf /tmp/mipsel-linux-muslsf-cross/mipsel-linux-muslsf/lib/*.la
         export SPC_LINUX_DEFAULT_CC=mipsel-linux-muslsf-gcc
         export SPC_LINUX_DEFAULT_CXX=mipsel-linux-muslsf-g++
         export SPC_LINUX_DEFAULT_AR=mipsel-linux-muslsf-ar
         export SPC_PHP_DEFAULT_OPTIMIZE_CFLAGS="${CFLAGS}"
         export SPC_PHP_DEFAULT_LD_LIBRARY_PATH_CMD="${LD_LIBRARY_PATH}"

         echo -e "开始编译... \n编译的PHP版本：${{ env.tag }} \n集成的模块：${{ env.option }}"
         bin/spc build --build-cli --build-fpm "${{ env.option }}" --with-libs="libjpeg" --debug
         
         ls buildroot/bin
         file buildroot/bin/php || true
         cp -r buildroot/bin/php buildroot/bin/php_upx
         cp -r buildroot/bin/php-fpm buildroot/bin/php-fpm_upx
         upx --lzma --best buildroot/bin/php_upx
         upx --lzma --best buildroot/bin/php-fpm_upx

         echo "haxi=$(git rev-parse HEAD)" >> $GITHUB_ENV
         echo "build_time=$(date '+%Y年%m月%d日%H:%M:%S' | jq -sRr @uri)" >> $GITHUB_ENV
         
    - uses: actions/upload-artifact@v4
      with:
        name: php-mipsel
        path: buildroot/bin
        
    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          > ### ![](https://img.shields.io/badge/%E7%BC%96%E8%AF%91%E6%97%B6%E9%97%B4-${{ env.build_time }}-8267?logo=github&labelColor=%E9%A1%BB)![](https://img.shields.io/github/downloads/${{ github.repository }}/${{ env.tag }}/total?label=%E4%B8%8B%E8%BD%BD%E6%AC%A1%E6%95%B0&logo=github)
           
          [提交记录](https://github.com/crazywhalecc/static-php-cli/tree/${{ env.haxi }})

          集成的模块：
          ```
          ${{ env.option }}
          ```

          `_upx` 后缀的为压缩后的程序
          
          [官方源码](https://github.com/crazywhalecc/static-php-cli)
           
        tag_name: ${{ env.tag }}
        files: |
          buildroot/bin/php
          buildroot/bin/php_upx
          buildroot/bin/php-fpm
          buildroot/bin/php-fpm_upx
          buildroot/etc/php-fpm.conf.default
          buildroot/etc/php-fpm.d/www.conf.default
